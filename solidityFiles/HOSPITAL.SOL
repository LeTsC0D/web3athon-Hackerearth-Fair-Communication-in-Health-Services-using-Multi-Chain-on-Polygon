pragma solidity >=0.7.0 <0.9.0;

contract HOSPITAL {
    struct hospital{
        uint id;
        string username;
        string password;
    }
    uint count=0;
    mapping (uint256 => hospital) hospitaldetails;

    struct request{
        uint requestid;
        uint hospitalid;
        uint patientid;
        string prescribedmedicine;
        string prescribedmedicinestatus;
        string prescribedtest;
        string prescribedtestappointmenttime;
        string prescribedteststatus;
    }
    // uint userid=0;
    mapping (uint256 => request[]) requestdetails;

    function createhospital(uint id,string memory username,string memory password)public{
       hospitaldetails[count]=hospital(id,username,password);
       count++;
    }

    function gethospitaldetails(uint hospitalid)public view returns(string memory){
        for(uint i=0;i<count;i++){
            if(hospitaldetails[i].id==hospitalid){
                return hospitaldetails[i].username;
            }
        }
        return "none";   
    }

    function fetchallhospitalids()public view returns(uint[] memory){
         uint[] memory arr=new uint[](count);
        for(uint i=0;i<count;i++){
            arr[i]=hospitaldetails[i].id;
        }
        return arr;
    }

    function createrequest(uint hospitaid,uint patientid,uint requestid,string memory prescribedmedicine,string memory prescribedmedicinestatus,string memory prescribedtest,string memory prescribedtestappointmenttime,string memory prescribedteststatus)public{
        for(uint i=0;i<count;i++){
            if(hospitaldetails[i].id==hospitaid){
                requestdetails[i].push(request(requestid,patientid,hospitaid,prescribedmedicine,prescribedmedicinestatus,prescribedtest,prescribedtestappointmenttime,prescribedteststatus));
            }
        }
    }

    function getallrequestbyhospitalidpatientid(uint hospitalid,uint patientid)public view returns(uint){
    uint count1=0;
        for(uint i=0;i<count;i++){
            if(hospitaldetails[i].id==hospitalid){
                for(uint j=0;i<requestdetails[i].length;i++){
                    if(requestdetails[i][j].patientid==patientid){
                        count1++;
                    }
                }
            }
        }        
        return count1;
    }

    function getrequestbyhospitalid(uint hospitalid) public view returns(request[] memory){
        for(uint i=0;i<count;i++){
            if(hospitaldetails[i].id==hospitalid){
                return requestdetails[i];
            }
        }
        
    }

    function getRecordbyPatientId(uint hospitalid,uint patientid)public view returns(request[] memory){
        for(uint i=0;i<count;i++){
            if(hospitaldetails[i].id==hospitalid){
                uint count1=0;
                for(uint j=0;j<requestdetails[i].length;j++){
                    if(requestdetails[i][j].patientid==patientid){
                        count1++;
                    }
                }
                request[] memory requestlist=new request[](count1);
                count1=0;
                for(uint j=0;j<requestdetails[i].length;j++){
                    if(requestdetails[i][j].patientid==patientid){
                        requestlist[count1]=request(requestdetails[i][j].requestid,requestdetails[i][j].hospitalid,
                        requestdetails[i][j].patientid,requestdetails[i][j].prescribedmedicine,
                        requestdetails[i][j].prescribedmedicinestatus,
                        requestdetails[i][j].prescribedtest,requestdetails[i][j].prescribedtestappointmenttime,
                        requestdetails[i][j].prescribedteststatus);
                        count1++;
                    }
                }   
                return requestlist; 
            }
        }
    }

    function updaterequest(uint requestid,uint hospitalid,string memory prescribedmedicinestatus,string memory prescribedtestappointmenttime,string memory prescribedteststatus)public{
        for(uint i=0;i<count;i++){
            if(hospitaldetails[i].id==hospitalid){
                for(uint j=0;j<requestdetails[i].length;j++){
                    if(requestdetails[i][j].requestid==requestid){
                        requestdetails[i][j].prescribedmedicinestatus=prescribedmedicinestatus;
                        requestdetails[i][j].prescribedtestappointmenttime=prescribedtestappointmenttime;
                        requestdetails[i][j].prescribedteststatus=prescribedteststatus;                                      
                    }
                }                
                
            }
        }

    }

}